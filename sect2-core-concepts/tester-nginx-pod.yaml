apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"name":"tester-nginx-label-name"},"name":"tester-nginx-pod","namespace":"default"},"spec":{"containers":[{"image":"gcr.io/google-containers/nginx","name":"tester-nginx-container","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"}}}]}}
  creationTimestamp: "2023-07-15T22:22:49Z"
  labels:
    name: tester-nginx-label-name
  name: tester-nginx-pod
  namespace: default
  resourceVersion: "1142"
  uid: dfb469e7-04df-44ec-949f-2e6c0e0915cf
spec:
  containers:
  - image: gcr.io/google-containers/nginx
    imagePullPolicy: Always
    name: tester-nginx-container
    ports:
    - containerPort: 8080
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 500m
        memory: 128Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-p8mrm
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-p8mrm
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-07-15T22:22:49Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-07-15T22:22:52Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-07-15T22:22:52Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-07-15T22:22:49Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://a2cfe61f89c5acc0e62fe93402516b4a78c5102288ab2fd2d9645bbf398d0aeb
    image: gcr.io/google-containers/nginx:latest
    imageID: docker-pullable://gcr.io/google-containers/nginx@sha256:f49a843c290594dcf4d193535d1f4ba8af7d56cea2cf79d1e9554f077f1e7aaa
    lastState: {}
    name: tester-nginx-container
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-07-15T22:22:51Z"
  hostIP: 192.168.49.2
  phase: Running
  podIP: 10.244.0.4
  podIPs:
  - ip: 10.244.0.4
  qosClass: Guaranteed
  startTime: "2023-07-15T22:22:49Z"
